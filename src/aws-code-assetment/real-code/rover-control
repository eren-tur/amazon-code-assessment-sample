A Mars rover is directed to move within a square matrix. It accepts a sequence of commands to move in any of the four directions from each cell: [UP, DOWN, LEFT or RIGHT]. The rover starts from cell 0. and may not move diagonally or outside of the boundary.

Each cell in the matrix has a position equal to:
(row * size) + column
where row and column are zero-indexed, size = row length of the matrix.

Return the final position of the rover after all moves.

Example
n = 4
commands = [RIGHT, UP, DOWN, LEFT, DOWN, DOWN]

The rover path is shown below.

0 1 2 3
4 5 6 7
8 9 10 11
12 13 14 15

--

public static int roverMove(String[] cmnds, int n){
	int row=0;
	int col=0;
	for(String cmnd:cmnds) {
		if(cmnd=="RIGHT") {
			if(col<n-1)col=col+1;
		}
		else if(cmnd=="LEFT") {
			if(col>0)col=col-1;
		}
		else if(cmnd=="UP") {
			if(row>0)row=row-1;
        }
		else {
			if(row<n-1) row=row+1;
		}
	}
	return (row*n)+col;
}