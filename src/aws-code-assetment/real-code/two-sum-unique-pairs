<p>Write a function that takes a list of numbers and a&nbsp;<code>target</code>&nbsp;number, and then returns the number of unique pairs that add up to the&nbsp;<code>target</code>&nbsp;number. <code>[X, Y]</code>&nbsp;and&nbsp;<code>[Y, X]</code>&nbsp;are considered the same pair, and not unique.</p>


-----------------

------------------

public static int getUniquePairsOpti(int[] nums, int target){
    Set<Integer> seen =  new HashSet<>();
    Map<Integer, Integer> map = new HashMap<>();
    int ans = 0;
    for (int num : nums){
        if (map.containsKey(num)){
            int key = map.get(num)*10 + num;
            if (! seen.contains(key)){
                ans++;
                seen.add(key);
            }
        } else {
            map.put(target-num, num);
        }
    }
    return ans;

}